apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    server {
      listen 80;
      listen [::]:80;
      server_name www.myevents.example;

      # access_log  /var/log/nginx/host.access.log  main;

      #location / {
      location ~  ^/ {
        # root   /usr/share/nginx/html/;
        alias /usr/share/nginx/html/;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html;
        proxy_redirect  http://localhost:8080 http://www.myevents.example;
        # proxy_pass http://www.myevents.example;
      }

      # error_page  404              /404.html;

      # redirect server error pages to the static page /50x.html
      error_page 500 502 503 504  /50x.html;
      location = /50x.html {
        root /usr/share/nginx/html;
      }

      # proxy the PHP scripts to Apache listening on 127.0.0.1:80
      # location ~ \.php$ {
      #   proxy_pass   http://127.0.0.1;
      # }

      # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
      # location ~ \.php$ {
      #   root           html;
      #   fastcgi_pass   127.0.0.1:9000;
      #   fastcgi_index  index.php;
      #   fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
      #   include        fastcgi_params;
      # }

      # deny access to .htaccess files, if Apache's document root
      # concurs with nginx's one
      # location ~ /\.ht {
      #   deny  all;
      # }
    }
  hosts: |
    # Kubernetes-managed hosts file.
    # 127.0.0.1	www.myevents.example
    0.0.0.0 www.myevents.example
    127.0.0.1	localhost
    192.168.49.2 www.myevents.example
    # 127.0.0.1	www.myevents.example
    ::1	localhost ip6-localhost ip6-loopback
    fe00::0	ip6-localnet
    fe00::0	ip6-mcastprefix
    fe00::1	ip6-allnodes
    fe00::2	ip6-allrouters
    10.244.0.20	frontend-d857ffbff-76jwg
  nginx.conf2: |
    #user  nginx;
    user  root;
    worker_processes  auto;

    error_log  /var/log/nginx/error.log notice;
    pid        /var/run/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;

        include /etc/nginx/conf.d/*.conf;
    }
